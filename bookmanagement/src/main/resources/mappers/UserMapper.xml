<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.toyproject.bookmanagement.repository.UserRepository">
	
	<resultMap type="com.toyproject.bookmanagement.entity.User" id="userMap">
		<id property="userId" column="user_id"/>
		<result property="email" column="email"/>
		<result property="password" column="password"/>
		<result property="name" column="name"/>
		<result property="provider" column="provider"/>
		<collection property="authorities" javaType="list" resultMap="authorityMap"/>
	</resultMap>
	
	<resultMap type="com.toyproject.bookmanagement.entity.Authority" id="authorityMap">
		<id property="authorityId" column="authority_id"/>
		<result property="userId" column="user_id"/>
		<result property="roleId" column="role_id"/>
		<association property="role" resultMap="roleMap" />
	</resultMap>
	
	<resultMap type="com.toyproject.bookmanagement.entity.Role" id="roleMap">
		<id property="roleId" column="role_id"/>
		<result property="roleName" column="role_name"/>
	</resultMap>
	
	<select id="findUserByEmail"  resultMap="userMap">
		select
			ub.user_id,
			ub.email,
			ub.password,
			ub.name,
			
			ab.authority_id,
			ab.user_id,
			ab.role_id,
			
			rb.role_id,
			rb.role_name
			
		from
			user_tb ub
	    	left outer join authority_tb ab on(ab.user_id = ub.user_id)
	    	left outer join role_tb rb on(rb.role_id = ab.role_id)
	    where
	    	ub.email = #{email}
	</select>
	
	<insert id="saveUser" parameterType="com.toyproject.bookmanagement.entity.User">
		insert into user_tb
		values(0,#{email},#{password},#{name},#{provider})
	</insert>

</mapper>
